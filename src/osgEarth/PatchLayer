/* -*-c++-*- */
/* osgEarth - Dynamic map generation toolkit for OpenSceneGraph
 * Copyright 2016 Pelican Mapping
 * http://osgearth.org
 *
 * osgEarth is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>
 */

#ifndef OSGEARTH_PATCH_LAYER_H
#define OSGEARTH_PATCH_LAYER_H 1

#include <osgEarth/Layer>
#include <osg/RenderInfo>
#include <osg/Texture>

namespace osgEarth
{
    /**
     * PatchLayer is a layer that can render terrain tiles using either
     * a geometry shader patch (GL_PATCHES) or a custom draw callback.
     */
    class OSGEARTH_EXPORT PatchLayer : public Layer
    {
    public:
        struct DrawInfo {
            const TileKey* key;
            float         range;
            osg::Texture* colorTexture;
            osg::Texture* elevationTexture;
            osg::Texture* materialTexture;
            osg::Texture* normalTexture;
            DrawInfo() : range(0.0f), colorTexture(0), elevationTexture(0), materialTexture(0), normalTexture(0) { }
        };

        /**
         * Callback that the terrain engine will call for custom tile rendering.
         */
        struct DrawCallback : public osg::Referenced
        {
            virtual void draw(osg::RenderInfo& ri, const DrawInfo& di) =0;
        };


    public:
        PatchLayer();

        /** dtor */
        virtual ~PatchLayer() { }

        /**
         * Draw callback to use to render tiles in this layer
         */
        void setDrawCallback(DrawCallback* value) { _drawCallback = value; }
        DrawCallback* getDrawCallback() const { return _drawCallback.get(); }

        /**
         * Terrain LOD at which to render tiles in this patch layer
         */
        void setPatchLOD(unsigned lod) { _patchLOD = lod; }
        unsigned getPatchLOD() const { return _patchLOD; }

    private:
        osg::ref_ptr<DrawCallback> _drawCallback;
        unsigned _patchLOD;
    };

    typedef std::vector< osg::ref_ptr<PatchLayer> > PatchLayerVector;

} // namespace osgEarth

#endif // OSGEARTH_PATCH_LAYER_H
