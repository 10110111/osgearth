/* -*-c++-*- */
/* osgEarth - Dynamic map generation toolkit for OpenSceneGraph
 * Copyright 2016 Pelican Mapping
 * http://osgearth.org
 *
 * osgEarth is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>
 */

#ifndef OSGEARTH_FEATURES_FEATURE_SOURCE_LAYER_H
#define OSGEARTH_FEATURES_FEATURE_SOURCE_LAYER_H 1

#include <osgEarth/WrapperLayer>
#include <osgEarthFeatures/FeatureSource>

namespace osgEarth { namespace Features
{
    /** Options structure for serialization of the FeatureSourceLayer */
    typedef WrapperLayerOptions<FeatureSourceOptions> FeatureSourceLayerOptions;
    
    /**
     * Layer holding a FeatureSource. Create one of these in the Map, and 
     * other Layers can find it and access the shared FeatureSource.

     * <feature_source>...</feature_source>
     */
    class OSGEARTHFEATURES_EXPORT FeatureSourceLayer : public WrapperLayer<FeatureSourceLayerOptions>
    {
    public:
        /**
         * Construct a feature source layer.
         */
        FeatureSourceLayer(const FeatureSourceLayerOptions& options) :
            WrapperLayer<FeatureSourceLayerOptions>(options) { }

        /**
         * Access the underlying feature source.
         * open() must be called before this is valid.
         */
        FeatureSource* getFeatureSource() const;

    public: // Layer

        /**
         * Open the feature source set this layer's status to its status.
         */
        virtual const Status& open();

        // Serialize this layer.
        virtual Config getConfig() const;


    protected:
        osg::ref_ptr<FeatureSource> _featureSource;
    };


} } // namespace osgEarth::Features

#endif // OSGEARTH_FEATURES_FEATURE_SOURCE_LAYER_H
